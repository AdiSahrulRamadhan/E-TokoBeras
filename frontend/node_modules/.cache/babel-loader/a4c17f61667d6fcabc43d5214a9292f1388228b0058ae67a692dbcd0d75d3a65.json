{"ast":null,"code":"var _jsxFileName = \"C:\\\\E-TokoBeras\\\\frontend\\\\src\\\\components\\\\OrderList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OrderList() {\n  _s();\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    // Ambil data pesanan dari API (menggunakan fetch)\n    fetch('http://localhost:4000/pesanan').then(res => res.json()).then(data => setOrders(data));\n  }, []);\n  const handleConfirmOrder = orderId => {\n    fetch('http://localhost:4000/konfirmasi', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: orderId,\n        status: 'dikirim'\n      })\n    }).then(res => res.json());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Daftar Pesanan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: orders.map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Pesanan ID: \", order.id, \" | Produk ID: \", order.id_produk, \" | Jumlah: \", order.jumlah, \" | Status: \", order.status, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleConfirmOrder(order.id),\n          children: \"Konfirmasi Pengiriman\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, order.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(OrderList, \"FvMuVccH6DXI6fqfhJiN/VsjZaw=\");\n_c = OrderList;\nexport default OrderList;\nvar _c;\n$RefreshReg$(_c, \"OrderList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","OrderList","_s","orders","setOrders","fetch","then","res","json","data","handleConfirmOrder","orderId","method","headers","body","JSON","stringify","id","status","children","fileName","_jsxFileName","lineNumber","columnNumber","map","order","id_produk","jumlah","onClick","_c","$RefreshReg$"],"sources":["C:/E-TokoBeras/frontend/src/components/OrderList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction OrderList() {\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Ambil data pesanan dari API (menggunakan fetch)\r\n    fetch('http://localhost:4000/pesanan')\r\n      .then((res) => res.json())\r\n      .then((data) => setOrders(data));\r\n  }, []);\r\n\r\n  const handleConfirmOrder = (orderId) => {\r\n    fetch('http://localhost:4000/konfirmasi', {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ id: orderId, status: 'dikirim' }),\r\n    }).then((res) => res.json());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Daftar Pesanan</h2>\r\n      <ul>\r\n        {orders.map((order) => (\r\n          <li key={order.id}>\r\n            Pesanan ID: {order.id} | Produk ID: {order.id_produk} | Jumlah: {order.jumlah} | Status: {order.status}\r\n            <button onClick={() => handleConfirmOrder(order.id)}>Konfirmasi Pengiriman</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACAO,KAAK,CAAC,+BAA+B,CAAC,CACnCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKL,SAAS,CAACK,IAAI,CAAC,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,kBAAkB,GAAIC,OAAO,IAAK;IACtCN,KAAK,CAAC,kCAAkC,EAAE;MACxCO,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,EAAE,EAAEN,OAAO;QAAEO,MAAM,EAAE;MAAU,CAAC;IACzD,CAAC,CAAC,CAACZ,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,oBACER,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBvB,OAAA;MAAAmB,QAAA,EACGhB,MAAM,CAACqB,GAAG,CAAEC,KAAK,iBAChBzB,OAAA;QAAAmB,QAAA,GAAmB,cACL,EAACM,KAAK,CAACR,EAAE,EAAC,gBAAc,EAACQ,KAAK,CAACC,SAAS,EAAC,aAAW,EAACD,KAAK,CAACE,MAAM,EAAC,aAAW,EAACF,KAAK,CAACP,MAAM,eACtGlB,OAAA;UAAQ4B,OAAO,EAAEA,CAAA,KAAMlB,kBAAkB,CAACe,KAAK,CAACR,EAAE,CAAE;UAAAE,QAAA,EAAC;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAF5EE,KAAK,CAACR,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACrB,EAAA,CA/BQD,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AAiClB,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}