{"ast":null,"code":"var _jsxFileName = \"C:\\\\E-TokoBeras\\\\frontend\\\\src\\\\components\\\\ProductList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { addToCart } from '../api'; // Assuming you have an API function to add products to the cart\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductList = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    // Fetch products from the backend when the component mounts\n    const fetchProducts = async () => {\n      const response = await fetch('http://localhost:4000/produk'); // Your backend API URL\n      const data = await response.json();\n      setProducts(data); // Store the fetched data in state\n    };\n    fetchProducts(); // Call the fetch function\n  }, []); // Empty dependency array ensures this runs only once when the component mounts\n\n  const handleAddToCart = async product => {\n    const userId = localStorage.getItem('userId');\n    const response = await addToCart(userId, product.id, 1); // Add product to cart with quantity 1\n    if (response.message) {\n      alert(`${product.nama} has been added to the cart!`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-4 mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card h-100 shadow-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `../images/${product.gambar}`,\n          alt: product.nama\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body product-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: product.nama\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: [\"Harga: Rp \", product.harga.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: [\"Stok: \", product.stok, \" kg\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success w-100\",\n            onClick: () => handleAddToCart(product),\n            children: \"Tambah ke Keranjang\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductList, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useState","useEffect","addToCart","jsxDEV","_jsxDEV","ProductList","_s","products","setProducts","fetchProducts","response","fetch","data","json","handleAddToCart","product","userId","localStorage","getItem","id","message","alert","nama","className","children","map","src","gambar","alt","fileName","_jsxFileName","lineNumber","columnNumber","harga","toLocaleString","stok","onClick","_c","$RefreshReg$"],"sources":["C:/E-TokoBeras/frontend/src/components/ProductList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { addToCart } from '../api'; // Assuming you have an API function to add products to the cart\r\n\r\nconst ProductList = () => {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch products from the backend when the component mounts\r\n    const fetchProducts = async () => {\r\n      const response = await fetch('http://localhost:4000/produk'); // Your backend API URL\r\n      const data = await response.json();\r\n      setProducts(data); // Store the fetched data in state\r\n    };\r\n\r\n    fetchProducts(); // Call the fetch function\r\n  }, []); // Empty dependency array ensures this runs only once when the component mounts\r\n\r\n  const handleAddToCart = async (product) => {\r\n    const userId = localStorage.getItem('userId');\r\n    const response = await addToCart(userId, product.id, 1); // Add product to cart with quantity 1\r\n    if (response.message) {\r\n      alert(`${product.nama} has been added to the cart!`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {products.map((product) => (\r\n        <div key={product.id} className=\"col-md-4 mb-3\">\r\n          <div className=\"card h-100 shadow-sm\">\r\n            <img src={`../images/${product.gambar}`} alt={product.nama} />\r\n            <div className=\"card-body product-info\">\r\n              <h5 className=\"card-title\">{product.nama}</h5>\r\n              <p className=\"card-text\">Harga: Rp {product.harga.toLocaleString()}</p>\r\n              <p className=\"card-text\">Stok: {product.stok} kg</p>\r\n              <button className=\"btn btn-success w-100\" onClick={() => handleAddToCart(product)}>\r\n                Tambah ke Keranjang\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}