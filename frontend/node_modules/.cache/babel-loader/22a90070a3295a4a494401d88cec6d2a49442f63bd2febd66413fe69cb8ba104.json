{"ast":null,"code":"var _jsxFileName = \"C:\\\\E-TokoBeras\\\\frontend\\\\src\\\\components\\\\OrderList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OrderList() {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchOrders = async () => {\n      try {\n        const res = await fetch('http://localhost:4000/pesanan');\n        if (!res.ok) {\n          throw new Error('Gagal mengambil data pesanan');\n        }\n        const data = await res.json();\n        setOrders(data);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    fetchOrders();\n  }, []);\n  const handleConfirmOrder = async orderId => {\n    try {\n      const res = await fetch('http://localhost:4000/konfirmasi', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: orderId,\n          status: 'dikirim'\n        })\n      });\n      if (!res.ok) {\n        throw new Error('Gagal mengonfirmasi pesanan');\n      }\n      // Update status pesanan lokal setelah konfirmasi\n      setOrders(orders.map(order => order.id === orderId ? {\n        ...order,\n        status: 'dikirim'\n      } : order));\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Memuat pesanan...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `Terjadi kesalahan: ${error}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Daftar Pesanan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: orders.map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Pesanan ID: \", order.id, \" | Produk ID: \", order.id_produk, \" | Jumlah: \", order.jumlah, \" | Status: \", order.status, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleConfirmOrder(order.id),\n          children: \"Konfirmasi Pengiriman\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, order.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(OrderList, \"x7inJL1bZn9UiZl0R10q/W4YjHI=\");\n_c = OrderList;\nexport default OrderList;\nvar _c;\n$RefreshReg$(_c, \"OrderList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","OrderList","_s","orders","setOrders","loading","setLoading","error","setError","fetchOrders","res","fetch","ok","Error","data","json","message","handleConfirmOrder","orderId","method","headers","body","JSON","stringify","id","status","map","order","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","id_produk","jumlah","onClick","_c","$RefreshReg$"],"sources":["C:/E-TokoBeras/frontend/src/components/OrderList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction OrderList() {\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      try {\r\n        const res = await fetch('http://localhost:4000/pesanan');\r\n        if (!res.ok) {\r\n          throw new Error('Gagal mengambil data pesanan');\r\n        }\r\n        const data = await res.json();\r\n        setOrders(data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(error.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchOrders();\r\n  }, []);\r\n\r\n  const handleConfirmOrder = async (orderId) => {\r\n    try {\r\n      const res = await fetch('http://localhost:4000/konfirmasi', {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ id: orderId, status: 'dikirim' }),\r\n      });\r\n      if (!res.ok) {\r\n        throw new Error('Gagal mengonfirmasi pesanan');\r\n      }\r\n      // Update status pesanan lokal setelah konfirmasi\r\n      setOrders(orders.map((order) =>\r\n        order.id === orderId ? { ...order, status: 'dikirim' } : order\r\n      ));\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>Memuat pesanan...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>{`Terjadi kesalahan: ${error}`}</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Daftar Pesanan</h2>\r\n      <ul>\r\n        {orders.map((order) => (\r\n          <li key={order.id}>\r\n            Pesanan ID: {order.id} | Produk ID: {order.id_produk} | Jumlah: {order.jumlah} | Status: {order.status}\r\n            <button onClick={() => handleConfirmOrder(order.id)}>Konfirmasi Pengiriman</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}