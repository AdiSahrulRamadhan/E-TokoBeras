{"ast":null,"code":"var _jsxFileName = \"C:\\\\E-TokoBeras\\\\frontend\\\\src\\\\components\\\\PaymentPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PaymentPage() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [metodePembayaran, setMetodePembayaran] = useState('');\n  const [nomorRekening, setNomorRekening] = useState('');\n  const userId = localStorage.getItem('userId'); // Ambil userId dari localStorage\n\n  useEffect(() => {\n    var _location$state;\n    // Ambil produk yang dipilih dari state yang dikirim dari halaman Cart\n    const items = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.items) || [];\n    setSelectedItems(items);\n  }, [location.state]);\n  const processOrder = async () => {\n    // Pastikan data sudah lengkap\n    if (!metodePembayaran || !nomorRekening || selectedItems.length === 0) {\n      alert('Lengkapi semua data untuk melanjutkan!');\n      return;\n    }\n\n    // Kirim pesanan ke backend\n    try {\n      for (const item of selectedItems) {\n        const response = await fetch('http://localhost:4000/pesan', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            id_pembeli: userId,\n            id_produk: item.id,\n            jumlah: item.jumlah\n          })\n        });\n        const result = await response.json();\n        console.log(result);\n      }\n      alert('Pesanan berhasil dibuat!');\n      navigate('/pesanan'); // Arahkan pengguna ke halaman pesanan\n    } catch (error) {\n      console.error('Gagal memproses pesanan:', error);\n      alert('Terjadi kesalahan saat memproses pesanan.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Halaman Pembayaran\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Metode Pembayaran:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: metodePembayaran,\n          onChange: e => setMetodePembayaran(e.target.value),\n          placeholder: \"Masukkan metode pembayaran\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nomor Rekening:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: nomorRekening,\n          onChange: e => setNomorRekening(e.target.value),\n          placeholder: \"Masukkan nomor rekening\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Produk yang Dibeli:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.nama, \" - Rp \", item.harga.toLocaleString(), \" x \", item.jumlah, \" kg\"]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: processOrder,\n        children: \"Pesan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(PaymentPage, \"WDLCuC7QMniJ+cDgot3QaDl2gyM=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = PaymentPage;\nexport default PaymentPage;\nvar _c;\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","jsxDEV","_jsxDEV","PaymentPage","_s","location","navigate","selectedItems","setSelectedItems","metodePembayaran","setMetodePembayaran","nomorRekening","setNomorRekening","userId","localStorage","getItem","_location$state","items","state","processOrder","length","alert","item","response","fetch","method","headers","body","JSON","stringify","id_pembeli","id_produk","id","jumlah","result","json","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","map","nama","harga","toLocaleString","onClick","_c","$RefreshReg$"],"sources":["C:/E-TokoBeras/frontend/src/components/PaymentPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nfunction PaymentPage() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const [metodePembayaran, setMetodePembayaran] = useState('');\r\n  const [nomorRekening, setNomorRekening] = useState('');\r\n  const userId = localStorage.getItem('userId'); // Ambil userId dari localStorage\r\n\r\n  useEffect(() => {\r\n    // Ambil produk yang dipilih dari state yang dikirim dari halaman Cart\r\n    const items = location.state?.items || [];\r\n    setSelectedItems(items);\r\n  }, [location.state]);\r\n\r\n  const processOrder = async () => {\r\n    // Pastikan data sudah lengkap\r\n    if (!metodePembayaran || !nomorRekening || selectedItems.length === 0) {\r\n      alert('Lengkapi semua data untuk melanjutkan!');\r\n      return;\r\n    }\r\n\r\n    // Kirim pesanan ke backend\r\n    try {\r\n      for (const item of selectedItems) {\r\n        const response = await fetch('http://localhost:4000/pesan', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            id_pembeli: userId,\r\n            id_produk: item.id,\r\n            jumlah: item.jumlah,\r\n          }),\r\n        });\r\n        const result = await response.json();\r\n        console.log(result);\r\n      }\r\n\r\n      alert('Pesanan berhasil dibuat!');\r\n      navigate('/pesanan'); // Arahkan pengguna ke halaman pesanan\r\n    } catch (error) {\r\n      console.error('Gagal memproses pesanan:', error);\r\n      alert('Terjadi kesalahan saat memproses pesanan.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Halaman Pembayaran</h2>\r\n      <form>\r\n        <div>\r\n          <label>Metode Pembayaran:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={metodePembayaran}\r\n            onChange={(e) => setMetodePembayaran(e.target.value)}\r\n            placeholder=\"Masukkan metode pembayaran\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Nomor Rekening:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={nomorRekening}\r\n            onChange={(e) => setNomorRekening(e.target.value)}\r\n            placeholder=\"Masukkan nomor rekening\"\r\n          />\r\n        </div>\r\n        <h3>Produk yang Dibeli:</h3>\r\n        <ul>\r\n          {selectedItems.map((item) => (\r\n            <li key={item.id}>\r\n              {item.nama} - Rp {item.harga.toLocaleString()} x {item.jumlah} kg\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <button type=\"button\" onClick={processOrder}>\r\n          Pesan\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}